% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_patient_networks.R
\name{format_patient_network}
\alias{format_patient_network}
\title{format_patient_network}
\usage{
format_patient_network(
  patient_id,
  phenoscore_output,
  phosphoproteomics,
  proteomics,
  sources,
  desired_phenotypes = NULL,
  network_params
)
}
\arguments{
\item{patient_id}{string, patient_ID}

\item{phenoscore_output}{list of four entities returned by \emph{infer_and_link_phenotypes}}

\item{phosphoproteomics}{a dataframe of phosphoproteomics}

\item{proteomics}{a dataframe of proteomics}

\item{sources}{dataframe of perturbed nodes (e.g., patient mutations), starting point of the model}

\item{desired_phenotypes}{SIGNOR phenotypes vector to infer the activity and include in the model; default:  \code{NULL}.}

\item{network_params}{check \emph{initialize_net_default_params} documentation, in the \verb{$format_options} part.}
}
\value{
A list of two elements:
\itemize{
\item \code{patient_opt_pheno_network}: a list of four elements with same structure as \emph{infer_and_link_phenotypes} output;  if \code{format_options$optimize_on_phenotypes = TRUE}, \code{sp_object_phenotypes} is optimized on phenotypes activity;
\item \code{circuit}: igraph object representing the functional circuit of \code{k} length from sources to targets
}
}
\description{
This function takes as input proteins-to-phenotypes network and can:
\itemize{
\item (optionally) visualize it in Cytoscape (if \code{format_options$vis_cytoscape = TRUE});
\item (optionally) optimize the network on phenotypes activity (if \code{format_options$optimize_on_phenotypes = TRUE});
\item (optionally) create functional phenotypes (if \code{format_options$circuits_params$k != -1});
}
}
\details{
\emph{Result output}
\itemize{
\item a \emph{list} containing a barplot of phenotypes activity, table of phenotypes regulators and phenotypic activity, and list of protein-to-phenotypes network (igraph object, nodes, and edges);
\item a \emph{igraph object} of the functional circuit connecting user-defined \code{sources} to \code{desired_phenotypes};
\item creates internally an \emph{RDS file} containing the functional circuit;
\item if \code{format_options$optimize_on_phenotypes = TRUE}, creates internally an \emph{RDS file} and \emph{SIF file} containing the optimized network on phentoypes.
}
}
\examples{

output_dir <- './Networks_output/'
network_params <- initialize_net_default_params(output_dir)
network_params$format_options <- list(optimize_on_phenotypes = TRUE,
                                      circuit_params = list(k=-1),
                                      vis_cytoscape = TRUE)
phenoscore_output = readRDS(paste0(output_dir, './Pheno_', patient_id, '_object.RDS'))

format_patient_network(patient_id = 'Patient1',
                       phenoscore_output = phenoscore_output,
                       sources = sources, # read mutation file
                       desired_phenotypes = c('APOPTOSIS', 'PROLIFERATION'),
                       proteomics, # read proteomics
                       phosphoproteomics, #read phosphoproteomics file
                       network_params = network_params)
}

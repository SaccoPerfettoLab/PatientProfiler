% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_phospho.R
\name{update_phospho}
\alias{update_phospho}
\title{update_phospho}
\usage{
update_phospho(
  df,
  site_col,
  gn_idx,
  seq_len_i = 7,
  uniprot_idx = NULL,
  peptide_col_name = NULL
)
}
\arguments{
\item{df}{dataframe (phosphoproteomics data).}

\item{site_col}{integer, the column index for phosphorylation site information.}

\item{gn_idx}{integer, the column index for gene names in the data frame.}

\item{seq_len_i}{integer, the length of the sequence window to be considered around the phosphopeptide.}

\item{uniprot_idx}{optional integer indicating the column index for UNIPROT IDs to be added at the uniprot column retrieved with AnnotationDbi (default is NULL).}

\item{peptide_col}{a string representing the name of the peptide column in the data frame.
If not provided, the function assumes no peptide column exists.}
}
\value{
A data frame with the processed phosphoproteomics data, including modified peptide sequences,
updated amino acid positions, and sequence windows. If no peptide column is provided, the function
directly computes amino acid positions.
}
\description{
This function processes phosphoproteomics data by performing several steps of data cleaning,
peptide modification, and enrichment of sequence information. It is designed to handle datasets
with phosphopeptides, modifying peptide sequences, adding multiplicity information, and computing
sequence windows around the phosphopeptides.
}
\examples{
# Example usage:
updated_phospho_df <- update_phospho(phospho_data, site_col = 3, gn_idx = 2, seq_len_i = 7, peptide_col_name = "Peptide")
head(updated_phospho_df)

}
